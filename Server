import java.net.ServerSocket;
import java.net.Socket;
import java.io.IOException;

public class SocketServer extends Thread{

      private ServerSocket serverSocket;
      private int port;
      private boolean isRunning= false;

    public SocketServer(int port){
        this.port= port;
    }

    public void start(){
        synchronized(this){
        }
        openServerSocket();
    
        while(isRunning){
            try {
                System.out.println("waiting for a connection");
                Socket socket = this.serverSocket.accept();
                RequestHandler requestHandler = new RequestHandler(socket);
            } catch (IOException e) {
                if(!isRunning) {
                    System.out.println("Server Stopped.") ;
                    return;
                }
                throw new RuntimeException(
                    "Error accepting client connection", e);
            }
        }
        System.out.println("Server Stopped.") ;
    }


    public synchronized void stopServer(){
        this.isRunning = false;
        try {
            this.serverSocket.close();
        } catch (IOException e) {
            throw new RuntimeException("Error closing server", e);
        }
    }

    private void openServerSocket() {
        try {
            this.serverSocket = new ServerSocket(this.serverPort);
        } catch (IOException e) {
            throw new RuntimeException("Cannot open port XXXX", e);
        }
    }

}

class RequestHandler extends Thread
{ 
    private Socket socket;
    RequestHandler(Socket socket)
    {
      this.socket = socket;
}

      public void start()
      {
            try
            {
            System.out.println("Connection Accepted");
                  DataInputStream din = new DataInputStream(socket.getInputStream());
                  DataOutputStream dout = new DataOutputStream(socket.getOutputStream());
                  BufferedReader br = newBufferedReader(new InputStreamReader());
                  String str="";
                  while(//client doesn't say stop)){
                        
                        str=din.readUTF();
                        System.out.println("Client says:"+str);
                        //do request ects
                        }
                        
                
                din.close();
                dout.close();
                socket.close();
                System.out.println("Connection has been closed");
                }
                catch( Exception e)
                {
                  System.out.println("Connection was not properly closed"); 
                  }
                  }
                
  
